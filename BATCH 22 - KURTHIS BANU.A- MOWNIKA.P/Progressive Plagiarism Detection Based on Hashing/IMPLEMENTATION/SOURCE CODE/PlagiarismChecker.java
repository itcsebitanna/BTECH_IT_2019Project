import javax.swing.JFileChooser;
import java.io.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.math.BigInteger; 
import java.security.MessageDigest; 
import java.sql.ResultSet;
import java.util.HashSet;
import java.util.Scanner;
import javax.swing.JOptionPane;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.text.PDFTextStripper;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PiePlot;
import org.jfree.data.general.DefaultPieDataset;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


public class PlagiarismChecker extends javax.swing.JFrame {
    public static int count=0;
    public static int plagiarismcount=0;
    public static int wordcount=0;
    public static HashSet<String> set=new HashSet<String>();
    public static String commom_Words="\\b(?i:and|in|out|all|or|of|to|on|by|are|these|but|so|nor|for|yet|also|either|neither|nor|etc|after|although|as|if|long as|as much as|as soon as|as though|because|before|by the time|even if|even though|if|in order that|in case|lest|once|only if|provided|that|since|so that|than|though|till|unless|until|when|whenever|where|wherever|while|is|was|have|has|had|been|be|a|an|the|eventhough|must|can|could|would|may|must|ought|might|do|don't|did|didn't|will|shall|i|he|she|it|they|them|us|we|his|her|him|herself|himself|ah|alas|dear|eh|er|hey|hi|hmm|umm|wow|ouch|well|mother|father|baby|child|toddler|teenager|grandmother|student|teacher|minister|businessperson|salesclerk|woman|man|Adorabl|Delightful|Homely|Quant|Adventurous|Depressed|Horrible|Aggressive|Determined|Hungry|Real|Agreeable|Different|Hurt|Relieved|Alert|Difficult|Repulsive|Alive|Disgusted|Ill|Rich|Amused|Distinct|Important|Elegant|Joyous|Sparkling|Bad|Embarrassed|Splendid|Beautiful|Enchanting|Kind|Spotless|Better|Encouraging|Stormy|Bewildered|Energetic|Lazy|Strange|Black|Enthusiastic|Light|Stupid|Bright|Famous|Modern|Tasty|Busy|Fancy|Motionless|Thankful|Dark|Helpful|Proud|Dead|Helpless|Puzzled|Zany|Defeated|Hilarious|Zealous|in addition to|under|first|second|third|again|equally|identically|like|uniquely|under|more over|besides|among|between|up|down|below|bottom|additionly|truly|lovely|near|narrow)\\b";
    public static String filepath="";
    public static String author="";
    public static String title="";
    public static String filename="";
    public static DefaultPieDataset piedataset=new DefaultPieDataset();
    public PlagiarismChecker() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(0, 204, 153));

        jLabel1.setFont(new java.awt.Font("Modern No. 20", 1, 40)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("ONLINE PLAGIARISM CHECKER");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(155, 155, 155)
                .addComponent(jLabel1)
                .addContainerGap(109, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                .addGap(23, 23, 23))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        jButton1.setFont(new java.awt.Font("Sylfaen", 0, 18)); // NOI18N
        jButton1.setText("select file");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        jButton2.setText("START");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rules_of_fight_club.png"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(233, 233, 233)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(225, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(260, 260, 260))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(253, 253, 253))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(34, 34, 34)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(112, 112, 112))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

public static void startPlagiarism()throws Exception{
          File file = new File(filename);  
          PDDocument doc = PDDocument.load(file);  
          PDFTextStripper pdfStripper = new PDFTextStripper();  
          String text = pdfStripper.getText(doc);  
           FileWriter fw=new FileWriter("D:\\testout.txt");    
           fw.write(text);    
           fw.close(); 
          String old_Content=" ";
          FileWriter writer = null;
          File file1=new File("D:\\testout.txt");    
    	  Scanner scn=new Scanner(file1);   
            while (scn.hasNext()) 
            {
                old_Content = old_Content + scn.next()+" ";   
            }               
            String newContent = old_Content.replaceAll(commom_Words,"");		   
	    newContent=newContent.replaceAll("[^a-zA-Z0-9]"," ");             
            writer = new FileWriter(file1);            
            writer.write(newContent);
            fileloading();
}
public static void fileloading()throws Exception{
               Class.forName("com.mysql.cj.jdbc.Driver");
               Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/filedb","root","");
               String sql="Select * from files";
               PreparedStatement pst=con.prepareStatement(sql);
               ResultSet rs=pst.executeQuery();
             
             while(rs.next())
                       {
                             filepath=rs.getString(4);
                             title=rs.getString(2);
                             author=rs.getString(3);
                             addFileContent(filepath);
                      }             
             System.out.println("Finished");
}
public static void addFileContent(String filepath)throws Exception{
     	File file = new File(filepath); 
          PDDocument doc = PDDocument.load(file);  
          PDFTextStripper pdfStripper = new PDFTextStripper();  
          String text = pdfStripper.getText(doc);  
           FileWriter fw=new FileWriter("D:\\temp1.txt");    
           fw.write(text);    
           fw.close();
          String old_Content=" ";

          FileWriter writer = null;
          File file1=new File("D:\\temp1.txt");    
    	  Scanner scn=new Scanner(file1);   
            while (scn.hasNext()) 
            {
                old_Content = old_Content + scn.next()+" ";
                 
            }
                          
            String newContent = old_Content.replaceAll(commom_Words,"");		   
	    newContent=newContent.replaceAll("[^a-zA-Z0-9]"," ");             
            writer = new FileWriter(file1);            
            writer.write(newContent);
            adding(file1);
}
public static void adding(File file)throws Exception{
    
    Scanner scn=new Scanner(file);
          while(scn.hasNext()){
              MessageDigest md = MessageDigest.getInstance("MD5"); 
  
            byte[] messageDigest = md.digest(scn.next().getBytes()); 
  
            BigInteger no = new BigInteger(1, messageDigest); 
  
            String hashtext = no.toString(16); 
            while (hashtext.length() < 32) { 
                hashtext = "0" + hashtext; 
            }
            set.add(hashtext);
          }
          FileWriter fw=new FileWriter(file);
          fw.write("");
          fileCompare();
}
public static void fileCompare()throws Exception{
    File file=new File("D:\\testOut.txt");
          Scanner scn=new Scanner(file);
          while(scn.hasNext()){
              wordcount++;
              MessageDigest md = MessageDigest.getInstance("MD5"); 
  
            byte[] messageDigest = md.digest(scn.next().getBytes()); 
  
            BigInteger no = new BigInteger(1, messageDigest); 
  
            String hashtext = no.toString(16); 
            while (hashtext.length() < 32) { 
                hashtext = "0" + hashtext; 
            } 
            if(set.contains(hashtext)){
                plagiarismcount++;
            }
          }  
             int plagiarismlevel=100*plagiarismcount/wordcount;
             System.out.println("yes");
             piedataset.setValue(title,plagiarismlevel);
             plagiarismcount=0;
             wordcount=0;
             set.clear();
}
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        JFileChooser jfilechooser=new JFileChooser();
        jfilechooser.showOpenDialog(this);
        File file=jfilechooser.getSelectedFile();
        filename=file.getAbsolutePath();
        jTextField1.setText(filename);
    }                                        

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
       if(jTextField1.getText().trim().isEmpty()){
           JOptionPane.showMessageDialog(this,"Select your file");
       }
       else{
           try{
           startPlagiarism();
           JFreeChart chart=ChartFactory.createPieChart3D("Pie Chart",piedataset,true,true,true);
        PiePlot P;
        P = (PiePlot)chart.getPlot();
        ChartFrame frame=new ChartFrame("Pie Chart",chart);
        frame.setVisible(true);
        frame.setSize(450,500);
           }
           catch(Exception e){
               System.out.println(e);
           }
       }
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PlagiarismChecker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PlagiarismChecker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PlagiarismChecker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlagiarismChecker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PlagiarismChecker().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration                   
}
